#!/usr/bin/env ruby
$:.unshift(File.join(File.expand_path(File.dirname(__FILE__)), '..', 'lib'))

require 'bel_parser'
require 'bel_parser/language/version2'
require 'bel_parser/language/semantics/analyzer'

module BELParser
  module Expression
    # Parser for BEL Expression.
    class TermSemanticsParser
      include BELParser::Parsers::Common
      include BELParser::Parsers::Expression

      FILTER = BELParser::ASTFilter.new(:term)

      def each(io)
        if block_given?
          v2           = BELParser::Language::Version2::Specification.new
          filtered_ast = FILTER.each(BELParser::ASTGenerator.new.each(io))
          filtered_ast.each do |results|
            term = results.last.first
            yield BELParser::Language::Semantics.check_term(term, v2)
          end
        else
          enum_for(:each, io)
        end
      end
    end
  end
end

BELParser::Expression::TermSemanticsParser.new.each($stdin) do |signature|
  valid_signatures = signature.compact
  puts 'Signatures:'
  valid_signatures.each do |sig|
    puts "  #{sig}"
  end
end
