require_relative '../../version1_0'
require_relative '../../function'
require_relative '../../signature'
require_relative '../../semantic_ast'

module BELParser
  module Language
    module Version1_0
      module Functions
        # <%= name %>: <%= description %>
        class <%= name %>
          extend Function

          SHORT       = :<%= short %>
          LONG        = :<%= long %>
          RETURN_TYPE = <%= return_type %>
          DESCRIPTION = '<%= description %>'.freeze

          def self.short
            SHORT
          end

          def self.long
            LONG
          end

          def self.return_type
            RETURN_TYPE
          end

          def self.description
            DESCRIPTION
          end

          def self.signatures
            SIGNATURES
          end

          module Signatures
  <% for sig in signatures %>
            class <%= sig[:name] %>
              extend BELParser::Language::Signature

              private_class_method :new

              AST = BELParser::Language::Semantics::Builder.build do
  <%= sig[:ast] %>              
              end
              private_constant :AST

              STRING_FORM = '<%= sig[:string_form] %>'.freeze
              private_constant :STRING_FORM

              def self.semantic_ast
                AST
              end

              def self.string_form
                STRING_FORM
              end
            end
  <% end %>
          end

          SIGNATURES = Signatures.constants.map do |const|
            Signatures.const_get(const)
          end.freeze
        end
      end
    end
  end
end
